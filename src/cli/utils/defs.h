#ifndef DEFS_H
#define DEFS_H

#include <cstdint>

// GLOBALS
using Bitboard = uint64_t;
extern Bitboard SetMask[64];
extern Bitboard ClearMask[64];

#define ENABLE_INCR_OPERATORS_ON(T)                                \
inline T& operator++(T& d) { return d = T(int(d) + 1); }           \
inline T& operator--(T& d) { return d = T(int(d) - 1); }

const int BitTable[64] = {
  63, 30, 3,  32, 25, 41, 22, 33,
  15, 50, 42, 13, 11, 53, 19, 34,
  61, 29, 2,  51, 21, 43, 45, 10,
  18, 47, 1,  54, 9,  57, 0,  35,
  62, 31, 40, 4,  49, 5,  52, 26,
  60, 6,  23, 44, 46, 27, 56, 16,
  7,  39, 48, 24, 59, 14, 12, 55,
  38, 28, 58, 20, 37, 17, 36, 8
};

static const Bitboard ZERO = 0;
/**
 * @brief A bitboard containing only the square a1. (ie. the number 1)
 */
static const Bitboard ONE = 1;
static const Bitboard BLANK = 0b0000000000000000000000000000000000000000000000000000000000000000;
static const Bitboard FULL =   0b1111111111111111111111111111111111111111111111111111111111111111;

static const Bitboard ROWMASK[] = {
  0b0000000000000000000000000000000000000000000000000000000011111111,
  0b0000000000000000000000000000000000000000000000001111111100000000,
  0b0000000000000000000000000000000000000000111111110000000000000000,
  0b0000000000000000000000000000000011111111000000000000000000000000,
  0b0000000000000000000000001111111100000000000000000000000000000000,
  0b0000000000000000111111110000000000000000000000000000000000000000,
  0b0000000011111111000000000000000000000000000000000000000000000000,
  0b1111111100000000000000000000000000000000000000000000000000000000
};

static const int RBits[64] = {
  12, 11, 11, 11, 11, 11, 11, 12,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  12, 11, 11, 11, 11, 11, 11, 12
};

static const int BBits[64] = {
  6, 5, 5, 5, 5, 5, 5, 6,
  5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5,
  6, 5, 5, 5, 5, 5, 5, 6
};

static const Bitboard NOT_H_FILE = 0b0111111101111111011111110111111101111111011111110111111101111111;
static const Bitboard NOT_GH_FILE = 0b0011111100111111001111110011111100111111001111110011111100111111;
static const Bitboard NOT_A_FILE = 0b1111111011111110111111101111111011111110111111101111111011111110;
static const Bitboard NOT_AB_FILE = 0b1111110011111100111111001111110011111100111111001111110011111100;

const Bitboard ALLWHITESTART =
0b0000000000000000000000000000000000000000000000001111111111111111;
const Bitboard ALLBLACKSTART =
0b1111111111111111000000000000000000000000000000000000000000000000;

#endif /* DEFS_H */
