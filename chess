let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Code/c++/trinity_engine
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +28 src/piece/king.cpp
badd +30 src/main.cpp
badd +145 src/board/board.cpp
badd +1 src/graphics/headers/IGuiComponent.h
badd +17 ~/Code/c++/trinity_engine/src/input/headers/arrow_input.h
badd +1 src/input/keyboard_input.cpp
badd +20 src/game/headers/menu.h
badd +6 ~/Code/c++/trinity_engine/src/input/headers/Arrow_input_menu.h
badd +39 src/game/headers/options.h
badd +44 ~/Code/c++/trinity_engine/src/configuration/headers/input_configuration.h
badd +15 src/player/headers/players.h
badd +19 src/view/headers/menu_view.h
badd +367 /usr/include/c++/12.2.1/bits/stl_map.h
badd +21 src/input/keyboard_input_player.cpp
badd +17 src/game/headers/move.hpp
badd +1 src/game/game.cpp
badd +10 ~/Code/c++/trinity_engine/src/input/headers/text_input_menu.h
badd +8 ~/Code/c++/trinity_engine/src/input/text_base.cpp
badd +10 ~/Code/c++/trinity_engine/src/input/headers/text_input.h
badd +27 ~/Code/c++/trinity_engine/src/input/headers/input_type.h
badd +38 src/game/headers/game.h
badd +28 src/board/headers/board.h
argglobal
%argdel
$argadd src/main.cpp
set lines=52 columns=270
edit src/game/game.cpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt src/board/board.cpp
let s:l = 1 - ((0 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 010|
wincmd w
argglobal
if bufexists(fnamemodify("src/game/headers/menu.h", ":p")) | buffer src/game/headers/menu.h | else | edit src/game/headers/menu.h | endif
if &buftype ==# 'terminal'
  silent file src/game/headers/menu.h
endif
balt ~/Code/c++/trinity_engine/src/input/headers/text_input_menu.h
let s:l = 20 - ((19 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 20
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("src/main.cpp", ":p")) | buffer src/main.cpp | else | edit src/main.cpp | endif
if &buftype ==# 'terminal'
  silent file src/main.cpp
endif
balt src/board/board.cpp
let s:l = 14 - ((13 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 14
normal! 0
wincmd w
2wincmd w
wincmd =
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
